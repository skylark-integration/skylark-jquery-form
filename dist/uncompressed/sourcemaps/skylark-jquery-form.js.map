{"version":3,"sources":["skylark-jquery-form.js"],"names":[],"mappingsfile":"../skylark-jquery-form.js","sourcesContent":["\r\ndefine('skylark-jquery-form/form',[\r\n\t\"skylark-jquery\"\r\n],function ($) {\r\n/* eslint-enable */\r\n\t'use strict';\r\n\r\n\t/*\r\n\t\tUsage Note:\r\n\t\t-----------\r\n\t\tDo not use both ajaxSubmit and ajaxForm on the same form. These\r\n\t\tfunctions are mutually exclusive. Use ajaxSubmit if you want\r\n\t\tto bind your own submit handler to the form. For example,\r\n\r\n\t\t$(document).ready(function() {\r\n\t\t\t$('#myForm').on('submit', function(e) {\r\n\t\t\t\te.preventDefault(); // <-- important\r\n\t\t\t\t$(this).ajaxSubmit({\r\n\t\t\t\t\ttarget: '#output'\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tUse ajaxForm when you want the plugin to manage all the event binding\r\n\t\tfor you. For example,\r\n\r\n\t\t$(document).ready(function() {\r\n\t\t\t$('#myForm').ajaxForm({\r\n\t\t\t\ttarget: '#output'\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tYou can also use ajaxForm with delegation (requires jQuery v1.7+), so the\r\n\t\tform does not have to exist when you invoke ajaxForm:\r\n\r\n\t\t$('#myForm').ajaxForm({\r\n\t\t\tdelegation: true,\r\n\t\t\ttarget: '#output'\r\n\t\t});\r\n\r\n\t\tWhen using ajaxForm, the ajaxSubmit function will be invoked for you\r\n\t\tat the appropriate time.\r\n\t*/\r\n\r\n\tvar rCRLF = /\\r?\\n/g;\r\n\r\n\t/**\r\n\t * Feature detection\r\n\t */\r\n\tvar feature = {};\r\n\r\n\tfeature.fileapi = $('<input type=\"file\">').get(0).files !== undefined;\r\n\tfeature.formdata = (typeof window.FormData !== 'undefined');\r\n\r\n\tvar hasProp = !!$.fn.prop;\r\n\r\n\t// attr2 uses prop when it can but checks the return type for\r\n\t// an expected string. This accounts for the case where a form\r\n\t// contains inputs with names like \"action\" or \"method\"; in those\r\n\t// cases \"prop\" returns the element\r\n\t$.fn.attr2 = function() {\r\n\t\tif (!hasProp) {\r\n\t\t\treturn this.attr.apply(this, arguments);\r\n\t\t}\r\n\r\n\t\tvar val = this.prop.apply(this, arguments);\r\n\r\n\t\tif ((val && val.jquery) || typeof val === 'string') {\r\n\t\t\treturn val;\r\n\t\t}\r\n\r\n\t\treturn this.attr.apply(this, arguments);\r\n\t};\r\n\r\n\t/**\r\n\t * ajaxSubmit() provides a mechanism for immediately submitting\r\n\t * an HTML form using AJAX.\r\n\t *\r\n\t * @param\t{object|string}\toptions\t\tjquery.form.js parameters or custom url for submission\r\n\t * @param\t{object}\t\tdata\t\textraData\r\n\t * @param\t{string}\t\tdataType\tajax dataType\r\n\t * @param\t{function}\t\tonSuccess\tajax success callback function\r\n\t */\r\n\t$.fn.ajaxSubmit = function(options, data, dataType, onSuccess) {\r\n\t\t// fast fail if nothing selected (http://dev.jquery.com/ticket/2752)\r\n\t\tif (!this.length) {\r\n\t\t\tlog('ajaxSubmit: skipping submit process - no element selected');\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t/* eslint consistent-this: [\"error\", \"$form\"] */\r\n\t\tvar method, action, url, $form = this;\r\n\r\n\t\tif (typeof options === 'function') {\r\n\t\t\toptions = {success: options};\r\n\r\n\t\t} else if (typeof options === 'string' || (options === false && arguments.length > 0)) {\r\n\t\t\toptions = {\r\n\t\t\t\t'url'      : options,\r\n\t\t\t\t'data'     : data,\r\n\t\t\t\t'dataType' : dataType\r\n\t\t\t};\r\n\r\n\t\t\tif (typeof onSuccess === 'function') {\r\n\t\t\t\toptions.success = onSuccess;\r\n\t\t\t}\r\n\r\n\t\t} else if (typeof options === 'undefined') {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\tmethod = options.method || options.type || this.attr2('method');\r\n\t\taction = options.url || this.attr2('action');\r\n\r\n\t\turl = (typeof action === 'string') ? $.trim(action) : '';\r\n\t\turl = url || window.location.href || '';\r\n\t\tif (url) {\r\n\t\t\t// clean url (don't include hash vaue)\r\n\t\t\turl = (url.match(/^([^#]+)/) || [])[1];\r\n\t\t}\r\n\r\n\t\toptions = $.extend(true, {\r\n\t\t\turl       : url,\r\n\t\t\tsuccess   : $.ajaxSettings.success,\r\n\t\t\ttype      : method || $.ajaxSettings.type,\r\n\t\t\tiframeSrc : /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank'\t\t// eslint-disable-line no-script-url\r\n\t\t}, options);\r\n\r\n\t\t// hook for manipulating the form data before it is extracted;\r\n\t\t// convenient for use with rich editors like tinyMCE or FCKEditor\r\n\t\tvar veto = {};\r\n\r\n\t\tthis.trigger('form-pre-serialize', [this, options, veto]);\r\n\r\n\t\tif (veto.veto) {\r\n\t\t\tlog('ajaxSubmit: submit vetoed via form-pre-serialize trigger');\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// provide opportunity to alter form data before it is serialized\r\n\t\tif (options.beforeSerialize && options.beforeSerialize(this, options) === false) {\r\n\t\t\tlog('ajaxSubmit: submit aborted via beforeSerialize callback');\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvar traditional = options.traditional;\r\n\r\n\t\tif (typeof traditional === 'undefined') {\r\n\t\t\ttraditional = $.ajaxSettings.traditional;\r\n\t\t}\r\n\r\n\t\tvar elements = [];\r\n\t\tvar qx, a = this.formToArray(options.semantic, elements, options.filtering);\r\n\r\n\t\tif (options.data) {\r\n\t\t\tvar optionsData = $.isFunction(options.data) ? options.data(a) : options.data;\r\n\r\n\t\t\toptions.extraData = optionsData;\r\n\t\t\tqx = $.param(optionsData, traditional);\r\n\t\t}\r\n\r\n\t\t// give pre-submit callback an opportunity to abort the submit\r\n\t\tif (options.beforeSubmit && options.beforeSubmit(a, this, options) === false) {\r\n\t\t\tlog('ajaxSubmit: submit aborted via beforeSubmit callback');\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// fire vetoable 'validate' event\r\n\t\tthis.trigger('form-submit-validate', [a, this, options, veto]);\r\n\t\tif (veto.veto) {\r\n\t\t\tlog('ajaxSubmit: submit vetoed via form-submit-validate trigger');\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvar q = $.param(a, traditional);\r\n\r\n\t\tif (qx) {\r\n\t\t\tq = (q ? (q + '&' + qx) : qx);\r\n\t\t}\r\n\r\n\t\tif (options.type.toUpperCase() === 'GET') {\r\n\t\t\toptions.url += (options.url.indexOf('?') >= 0 ? '&' : '?') + q;\r\n\t\t\toptions.data = null;\t// data is null for 'get'\r\n\t\t} else {\r\n\t\t\toptions.data = q;\t\t// data is the query string for 'post'\r\n\t\t}\r\n\r\n\t\tvar callbacks = [];\r\n\r\n\t\tif (options.resetForm) {\r\n\t\t\tcallbacks.push(function() {\r\n\t\t\t\t$form.resetForm();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (options.clearForm) {\r\n\t\t\tcallbacks.push(function() {\r\n\t\t\t\t$form.clearForm(options.includeHidden);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// perform a load on the target only if dataType is not provided\r\n\t\tif (!options.dataType && options.target) {\r\n\t\t\tvar oldSuccess = options.success || function(){};\r\n\r\n\t\t\tcallbacks.push(function(data, textStatus, jqXHR) {\r\n\t\t\t\tvar successArguments = arguments,\r\n\t\t\t\t\tfn = options.replaceTarget ? 'replaceWith' : 'html';\r\n\r\n\t\t\t\t$(options.target)[fn](data).each(function(){\r\n\t\t\t\t\toldSuccess.apply(this, successArguments);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t} else if (options.success) {\r\n\t\t\tif ($.isArray(options.success)) {\r\n\t\t\t\t$.merge(callbacks, options.success);\r\n\t\t\t} else {\r\n\t\t\t\tcallbacks.push(options.success);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toptions.success = function(data, status, xhr) { // jQuery 1.4+ passes xhr as 3rd arg\r\n\t\t\tvar context = options.context || this;\t\t// jQuery 1.4+ supports scope context\r\n\r\n\t\t\tfor (var i = 0, max = callbacks.length; i < max; i++) {\r\n\t\t\t\tcallbacks[i].apply(context, [data, status, xhr || $form, $form]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (options.error) {\r\n\t\t\tvar oldError = options.error;\r\n\r\n\t\t\toptions.error = function(xhr, status, error) {\r\n\t\t\t\tvar context = options.context || this;\r\n\r\n\t\t\t\toldError.apply(context, [xhr, status, error, $form]);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (options.complete) {\r\n\t\t\tvar oldComplete = options.complete;\r\n\r\n\t\t\toptions.complete = function(xhr, status) {\r\n\t\t\t\tvar context = options.context || this;\r\n\r\n\t\t\t\toldComplete.apply(context, [xhr, status, $form]);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// are there files to upload?\r\n\r\n\t\t// [value] (issue #113), also see comment:\r\n\t\t// https://github.com/malsup/form/commit/588306aedba1de01388032d5f42a60159eea9228#commitcomment-2180219\r\n\t\tvar fileInputs = $('input[type=file]:enabled', this).filter(function() {\r\n\t\t\treturn $(this).val() !== '';\r\n\t\t});\r\n\t\tvar hasFileInputs = fileInputs.length > 0;\r\n\t\tvar mp = 'multipart/form-data';\r\n\t\tvar multipart = ($form.attr('enctype') === mp || $form.attr('encoding') === mp);\r\n\t\tvar fileAPI = feature.fileapi && feature.formdata;\r\n\r\n\t\tlog('fileAPI :' + fileAPI);\r\n\r\n\t\tvar shouldUseFrame = (hasFileInputs || multipart) && !fileAPI;\r\n\t\tvar jqxhr;\r\n\r\n\t\t// options.iframe allows user to force iframe mode\r\n\t\t// 06-NOV-09: now defaulting to iframe mode if file input is detected\r\n\t\tif (options.iframe !== false && (options.iframe || shouldUseFrame)) {\r\n\t\t\t// hack to fix Safari hang (thanks to Tim Molendijk for this)\r\n\t\t\t// see: http://groups.google.com/group/jquery-dev/browse_thread/thread/36395b7ab510dd5d\r\n\t\t\tif (options.closeKeepAlive) {\r\n\t\t\t\t$.get(options.closeKeepAlive, function() {\r\n\t\t\t\t\tjqxhr = fileUploadIframe(a);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\tjqxhr = fileUploadIframe(a);\r\n\t\t\t}\r\n\r\n\t\t} else if ((hasFileInputs || multipart) && fileAPI) {\r\n\t\t\tjqxhr = fileUploadXhr(a);\r\n\r\n\t\t} else {\r\n\t\t\tjqxhr = $.ajax(options);\r\n\t\t}\r\n\r\n\t\t$form.removeData('jqxhr').data('jqxhr', jqxhr);\r\n\r\n\t\t// clear element array\r\n\t\tfor (var k = 0; k < elements.length; k++) {\r\n\t\t\telements[k] = null;\r\n\t\t}\r\n\r\n\t\t// fire 'notify' event\r\n\t\tthis.trigger('form-submit-notify', [this, options]);\r\n\r\n\t\treturn this;\r\n\r\n\t\t// utility fn for deep serialization\r\n\t\tfunction deepSerialize(extraData) {\r\n\t\t\tvar serialized = $.param(extraData, options.traditional).split('&');\r\n\t\t\tvar len = serialized.length;\r\n\t\t\tvar result = [];\r\n\t\t\tvar i, part;\r\n\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t// #252; undo param space replacement\r\n\t\t\t\tserialized[i] = serialized[i].replace(/\\+/g, ' ');\r\n\t\t\t\tpart = serialized[i].split('=');\r\n\t\t\t\t// #278; use array instead of object storage, favoring array serializations\r\n\t\t\t\tresult.push([decodeURIComponent(part[0]), decodeURIComponent(part[1])]);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t// XMLHttpRequest Level 2 file uploads (big hat tip to francois2metz)\r\n\t\tfunction fileUploadXhr(a) {\r\n\t\t\tvar formdata = new FormData();\r\n\r\n\t\t\tfor (var i = 0; i < a.length; i++) {\r\n\t\t\t\tformdata.append(a[i].name, a[i].value);\r\n\t\t\t}\r\n\r\n\t\t\tif (options.extraData) {\r\n\t\t\t\tvar serializedData = deepSerialize(options.extraData);\r\n\r\n\t\t\t\tfor (i = 0; i < serializedData.length; i++) {\r\n\t\t\t\t\tif (serializedData[i]) {\r\n\t\t\t\t\t\tformdata.append(serializedData[i][0], serializedData[i][1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toptions.data = null;\r\n\r\n\t\t\tvar s = $.extend(true, {}, $.ajaxSettings, options, {\r\n\t\t\t\tcontentType : false,\r\n\t\t\t\tprocessData : false,\r\n\t\t\t\tcache       : false,\r\n\t\t\t\ttype        : method || 'POST'\r\n\t\t\t});\r\n\r\n\t\t\tif (options.uploadProgress) {\r\n\t\t\t\t// workaround because jqXHR does not expose upload property\r\n\t\t\t\ts.xhr = function() {\r\n\t\t\t\t\tvar xhr = $.ajaxSettings.xhr();\r\n\r\n\t\t\t\t\tif (xhr.upload) {\r\n\t\t\t\t\t\txhr.upload.addEventListener('progress', function(event) {\r\n\t\t\t\t\t\t\tvar percent = 0;\r\n\t\t\t\t\t\t\tvar position = event.loaded || event.position;\t\t\t/* event.position is deprecated */\r\n\t\t\t\t\t\t\tvar total = event.total;\r\n\r\n\t\t\t\t\t\t\tif (event.lengthComputable) {\r\n\t\t\t\t\t\t\t\tpercent = Math.ceil(position / total * 100);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\toptions.uploadProgress(event, position, total, percent);\r\n\t\t\t\t\t\t}, false);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn xhr;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\ts.data = null;\r\n\r\n\t\t\tvar beforeSend = s.beforeSend;\r\n\r\n\t\t\ts.beforeSend = function(xhr, o) {\r\n\t\t\t\t// Send FormData() provided by user\r\n\t\t\t\tif (options.formData) {\r\n\t\t\t\t\to.data = options.formData;\r\n\t\t\t\t} else {\r\n\t\t\t\t\to.data = formdata;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (beforeSend) {\r\n\t\t\t\t\tbeforeSend.call(this, xhr, o);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\treturn $.ajax(s);\r\n\t\t}\r\n\r\n\t\t// private function for handling file uploads (hat tip to YAHOO!)\r\n\t\tfunction fileUploadIframe(a) {\r\n\t\t\tvar form = $form[0], el, i, s, g, id, $io, io, xhr, sub, n, timedOut, timeoutHandle;\r\n\t\t\tvar deferred = $.Deferred();\r\n\r\n\t\t\t// #341\r\n\t\t\tdeferred.abort = function(status) {\r\n\t\t\t\txhr.abort(status);\r\n\t\t\t};\r\n\r\n\t\t\tif (a) {\r\n\t\t\t\t// ensure that every serialized input is still enabled\r\n\t\t\t\tfor (i = 0; i < elements.length; i++) {\r\n\t\t\t\t\tel = $(elements[i]);\r\n\t\t\t\t\tif (hasProp) {\r\n\t\t\t\t\t\tel.prop('disabled', false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tel.removeAttr('disabled');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ts = $.extend(true, {}, $.ajaxSettings, options);\r\n\t\t\ts.context = s.context || s;\r\n\t\t\tid = 'jqFormIO' + new Date().getTime();\r\n\t\t\tvar ownerDocument = form.ownerDocument;\r\n\t\t\tvar $body = $form.closest('body');\r\n\r\n\t\t\tif (s.iframeTarget) {\r\n\t\t\t\t$io = $(s.iframeTarget, ownerDocument);\r\n\t\t\t\tn = $io.attr2('name');\r\n\t\t\t\tif (!n) {\r\n\t\t\t\t\t$io.attr2('name', id);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tid = n;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\t$io = $('<iframe name=\"' + id + '\" src=\"' + s.iframeSrc + '\" />', ownerDocument);\r\n\t\t\t\t$io.css({position: 'absolute', top: '-1000px', left: '-1000px'});\r\n\t\t\t}\r\n\t\t\tio = $io[0];\r\n\r\n\r\n\t\t\txhr = { // mock object\r\n\t\t\t\taborted               : 0,\r\n\t\t\t\tresponseText          : null,\r\n\t\t\t\tresponseXML           : null,\r\n\t\t\t\tstatus                : 0,\r\n\t\t\t\tstatusText            : 'n/a',\r\n\t\t\t\tgetAllResponseHeaders : function() {},\r\n\t\t\t\tgetResponseHeader     : function() {},\r\n\t\t\t\tsetRequestHeader      : function() {},\r\n\t\t\t\tabort                 : function(status) {\r\n\t\t\t\t\tvar e = (status === 'timeout' ? 'timeout' : 'aborted');\r\n\r\n\t\t\t\t\tlog('aborting upload... ' + e);\r\n\t\t\t\t\tthis.aborted = 1;\r\n\r\n\t\t\t\t\ttry { // #214, #257\r\n\t\t\t\t\t\tif (io.contentWindow.document.execCommand) {\r\n\t\t\t\t\t\t\tio.contentWindow.document.execCommand('Stop');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (ignore) {}\r\n\r\n\t\t\t\t\t$io.attr('src', s.iframeSrc); // abort op in progress\r\n\t\t\t\t\txhr.error = e;\r\n\t\t\t\t\tif (s.error) {\r\n\t\t\t\t\t\ts.error.call(s.context, xhr, e, status);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (g) {\r\n\t\t\t\t\t\t$.event.trigger('ajaxError', [xhr, s, e]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (s.complete) {\r\n\t\t\t\t\t\ts.complete.call(s.context, xhr, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tg = s.global;\r\n\t\t\t// trigger ajax global events so that activity/block indicators work like normal\r\n\t\t\tif (g && $.active++ === 0) {\r\n\t\t\t\t$.event.trigger('ajaxStart');\r\n\t\t\t}\r\n\t\t\tif (g) {\r\n\t\t\t\t$.event.trigger('ajaxSend', [xhr, s]);\r\n\t\t\t}\r\n\r\n\t\t\tif (s.beforeSend && s.beforeSend.call(s.context, xhr, s) === false) {\r\n\t\t\t\tif (s.global) {\r\n\t\t\t\t\t$.active--;\r\n\t\t\t\t}\r\n\t\t\t\tdeferred.reject();\r\n\r\n\t\t\t\treturn deferred;\r\n\t\t\t}\r\n\r\n\t\t\tif (xhr.aborted) {\r\n\t\t\t\tdeferred.reject();\r\n\r\n\t\t\t\treturn deferred;\r\n\t\t\t}\r\n\r\n\t\t\t// add submitting element to data if we know it\r\n\t\t\tsub = form.clk;\r\n\t\t\tif (sub) {\r\n\t\t\t\tn = sub.name;\r\n\t\t\t\tif (n && !sub.disabled) {\r\n\t\t\t\t\ts.extraData = s.extraData || {};\r\n\t\t\t\t\ts.extraData[n] = sub.value;\r\n\t\t\t\t\tif (sub.type === 'image') {\r\n\t\t\t\t\t\ts.extraData[n + '.x'] = form.clk_x;\r\n\t\t\t\t\t\ts.extraData[n + '.y'] = form.clk_y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar CLIENT_TIMEOUT_ABORT = 1;\r\n\t\t\tvar SERVER_ABORT = 2;\r\n\r\n\t\t\tfunction getDoc(frame) {\r\n\t\t\t\t/* it looks like contentWindow or contentDocument do not\r\n\t\t\t\t * carry the protocol property in ie8, when running under ssl\r\n\t\t\t\t * frame.document is the only valid response document, since\r\n\t\t\t\t * the protocol is know but not on the other two objects. strange?\r\n\t\t\t\t * \"Same origin policy\" http://en.wikipedia.org/wiki/Same_origin_policy\r\n\t\t\t\t */\r\n\r\n\t\t\t\tvar doc = null;\r\n\r\n\t\t\t\t// IE8 cascading access check\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (frame.contentWindow) {\r\n\t\t\t\t\t\tdoc = frame.contentWindow.document;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// IE8 access denied under ssl & missing protocol\r\n\t\t\t\t\tlog('cannot get iframe.contentWindow document: ' + err);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (doc) { // successful getting content\r\n\t\t\t\t\treturn doc;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry { // simply checking may throw in ie8 under ssl or mismatched protocol\r\n\t\t\t\t\tdoc = frame.contentDocument ? frame.contentDocument : frame.document;\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// last attempt\r\n\t\t\t\t\tlog('cannot get iframe.contentDocument: ' + err);\r\n\t\t\t\t\tdoc = frame.document;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn doc;\r\n\t\t\t}\r\n\r\n\t\t\t// Rails CSRF hack (thanks to Yvan Barthelemy)\r\n\t\t\tvar csrf_token = $('meta[name=csrf-token]').attr('content');\r\n\t\t\tvar csrf_param = $('meta[name=csrf-param]').attr('content');\r\n\r\n\t\t\tif (csrf_param && csrf_token) {\r\n\t\t\t\ts.extraData = s.extraData || {};\r\n\t\t\t\ts.extraData[csrf_param] = csrf_token;\r\n\t\t\t}\r\n\r\n\t\t\t// take a breath so that pending repaints get some cpu time before the upload starts\r\n\t\t\tfunction doSubmit() {\r\n\t\t\t\t// make sure form attrs are set\r\n\t\t\t\tvar t = $form.attr2('target'),\r\n\t\t\t\t\ta = $form.attr2('action'),\r\n\t\t\t\t\tmp = 'multipart/form-data',\r\n\t\t\t\t\tet = $form.attr('enctype') || $form.attr('encoding') || mp;\r\n\r\n\t\t\t\t// update form attrs in IE friendly way\r\n\t\t\t\tform.setAttribute('target', id);\r\n\t\t\t\tif (!method || /post/i.test(method)) {\r\n\t\t\t\t\tform.setAttribute('method', 'POST');\r\n\t\t\t\t}\r\n\t\t\t\tif (a !== s.url) {\r\n\t\t\t\t\tform.setAttribute('action', s.url);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// ie borks in some cases when setting encoding\r\n\t\t\t\tif (!s.skipEncodingOverride && (!method || /post/i.test(method))) {\r\n\t\t\t\t\t$form.attr({\r\n\t\t\t\t\t\tencoding : 'multipart/form-data',\r\n\t\t\t\t\t\tenctype  : 'multipart/form-data'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// support timout\r\n\t\t\t\tif (s.timeout) {\r\n\t\t\t\t\ttimeoutHandle = setTimeout(function() {\r\n\t\t\t\t\t\ttimedOut = true; cb(CLIENT_TIMEOUT_ABORT);\r\n\t\t\t\t\t}, s.timeout);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// look for server aborts\r\n\t\t\t\tfunction checkState() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar state = getDoc(io).readyState;\r\n\r\n\t\t\t\t\t\tlog('state = ' + state);\r\n\t\t\t\t\t\tif (state && state.toLowerCase() === 'uninitialized') {\r\n\t\t\t\t\t\t\tsetTimeout(checkState, 50);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tlog('Server abort: ', e, ' (', e.name, ')');\r\n\t\t\t\t\t\tcb(SERVER_ABORT);\t\t\t\t// eslint-disable-line callback-return\r\n\t\t\t\t\t\tif (timeoutHandle) {\r\n\t\t\t\t\t\t\tclearTimeout(timeoutHandle);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttimeoutHandle = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add \"extra\" data to form if provided in options\r\n\t\t\t\tvar extraInputs = [];\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (s.extraData) {\r\n\t\t\t\t\t\tfor (var n in s.extraData) {\r\n\t\t\t\t\t\t\tif (s.extraData.hasOwnProperty(n)) {\r\n\t\t\t\t\t\t\t\t// if using the $.param format that allows for multiple values with the same name\r\n\t\t\t\t\t\t\t\tif ($.isPlainObject(s.extraData[n]) && s.extraData[n].hasOwnProperty('name') && s.extraData[n].hasOwnProperty('value')) {\r\n\t\t\t\t\t\t\t\t\textraInputs.push(\r\n\t\t\t\t\t\t\t\t\t$('<input type=\"hidden\" name=\"' + s.extraData[n].name + '\">', ownerDocument).val(s.extraData[n].value)\r\n\t\t\t\t\t\t\t\t\t\t.appendTo(form)[0]);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\textraInputs.push(\r\n\t\t\t\t\t\t\t\t\t$('<input type=\"hidden\" name=\"' + n + '\">', ownerDocument).val(s.extraData[n])\r\n\t\t\t\t\t\t\t\t\t\t.appendTo(form)[0]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!s.iframeTarget) {\r\n\t\t\t\t\t\t// add iframe to doc and submit the form\r\n\t\t\t\t\t\t$io.appendTo($body);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (io.attachEvent) {\r\n\t\t\t\t\t\tio.attachEvent('onload', cb);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tio.addEventListener('load', cb, false);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsetTimeout(checkState, 15);\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tform.submit();\r\n\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t// just in case form has element with name/id of 'submit'\r\n\t\t\t\t\t\tvar submitFn = document.createElement('form').submit;\r\n\r\n\t\t\t\t\t\tsubmitFn.apply(form);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} finally {\r\n\t\t\t\t\t// reset attrs and remove \"extra\" input elements\r\n\t\t\t\t\tform.setAttribute('action', a);\r\n\t\t\t\t\tform.setAttribute('enctype', et); // #380\r\n\t\t\t\t\tif (t) {\r\n\t\t\t\t\t\tform.setAttribute('target', t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$form.removeAttr('target');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$(extraInputs).remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (s.forceSync) {\r\n\t\t\t\tdoSubmit();\r\n\t\t\t} else {\r\n\t\t\t\tsetTimeout(doSubmit, 10); // this lets dom updates render\r\n\t\t\t}\r\n\r\n\t\t\tvar data, doc, domCheckCount = 50, callbackProcessed;\r\n\r\n\t\t\tfunction cb(e) {\r\n\t\t\t\tif (xhr.aborted || callbackProcessed) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdoc = getDoc(io);\r\n\t\t\t\tif (!doc) {\r\n\t\t\t\t\tlog('cannot access response document');\r\n\t\t\t\t\te = SERVER_ABORT;\r\n\t\t\t\t}\r\n\t\t\t\tif (e === CLIENT_TIMEOUT_ABORT && xhr) {\r\n\t\t\t\t\txhr.abort('timeout');\r\n\t\t\t\t\tdeferred.reject(xhr, 'timeout');\r\n\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t} else if (e === SERVER_ABORT && xhr) {\r\n\t\t\t\t\txhr.abort('server abort');\r\n\t\t\t\t\tdeferred.reject(xhr, 'error', 'server abort');\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!doc || doc.location.href === s.iframeSrc) {\r\n\t\t\t\t\t// response not received yet\r\n\t\t\t\t\tif (!timedOut) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (io.detachEvent) {\r\n\t\t\t\t\tio.detachEvent('onload', cb);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tio.removeEventListener('load', cb, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar status = 'success', errMsg;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (timedOut) {\r\n\t\t\t\t\t\tthrow 'timeout';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar isXml = s.dataType === 'xml' || doc.XMLDocument || $.isXMLDoc(doc);\r\n\r\n\t\t\t\t\tlog('isXml=' + isXml);\r\n\r\n\t\t\t\t\tif (!isXml && window.opera && (doc.body === null || !doc.body.innerHTML)) {\r\n\t\t\t\t\t\tif (--domCheckCount) {\r\n\t\t\t\t\t\t\t// in some browsers (Opera) the iframe DOM is not always traversable when\r\n\t\t\t\t\t\t\t// the onload callback fires, so we loop a bit to accommodate\r\n\t\t\t\t\t\t\tlog('requeing onLoad callback, DOM not available');\r\n\t\t\t\t\t\t\tsetTimeout(cb, 250);\r\n\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// let this fall through because server response could be an empty document\r\n\t\t\t\t\t\t// log('Could not access iframe DOM after mutiple tries.');\r\n\t\t\t\t\t\t// throw 'DOMException: not available';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// log('response detected');\r\n\t\t\t\t\tvar docRoot = doc.body ? doc.body : doc.documentElement;\r\n\r\n\t\t\t\t\txhr.responseText = docRoot ? docRoot.innerHTML : null;\r\n\t\t\t\t\txhr.responseXML = doc.XMLDocument ? doc.XMLDocument : doc;\r\n\t\t\t\t\tif (isXml) {\r\n\t\t\t\t\t\ts.dataType = 'xml';\r\n\t\t\t\t\t}\r\n\t\t\t\t\txhr.getResponseHeader = function(header){\r\n\t\t\t\t\t\tvar headers = {'content-type': s.dataType};\r\n\r\n\t\t\t\t\t\treturn headers[header.toLowerCase()];\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// support for XHR 'status' & 'statusText' emulation :\r\n\t\t\t\t\tif (docRoot) {\r\n\t\t\t\t\t\txhr.status = Number(docRoot.getAttribute('status')) || xhr.status;\r\n\t\t\t\t\t\txhr.statusText = docRoot.getAttribute('statusText') || xhr.statusText;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar dt = (s.dataType || '').toLowerCase();\r\n\t\t\t\t\tvar scr = /(json|script|text)/.test(dt);\r\n\r\n\t\t\t\t\tif (scr || s.textarea) {\r\n\t\t\t\t\t\t// see if user embedded response in textarea\r\n\t\t\t\t\t\tvar ta = doc.getElementsByTagName('textarea')[0];\r\n\r\n\t\t\t\t\t\tif (ta) {\r\n\t\t\t\t\t\t\txhr.responseText = ta.value;\r\n\t\t\t\t\t\t\t// support for XHR 'status' & 'statusText' emulation :\r\n\t\t\t\t\t\t\txhr.status = Number(ta.getAttribute('status')) || xhr.status;\r\n\t\t\t\t\t\t\txhr.statusText = ta.getAttribute('statusText') || xhr.statusText;\r\n\r\n\t\t\t\t\t\t} else if (scr) {\r\n\t\t\t\t\t\t\t// account for browsers injecting pre around json response\r\n\t\t\t\t\t\t\tvar pre = doc.getElementsByTagName('pre')[0];\r\n\t\t\t\t\t\t\tvar b = doc.getElementsByTagName('body')[0];\r\n\r\n\t\t\t\t\t\t\tif (pre) {\r\n\t\t\t\t\t\t\t\txhr.responseText = pre.textContent ? pre.textContent : pre.innerText;\r\n\t\t\t\t\t\t\t} else if (b) {\r\n\t\t\t\t\t\t\t\txhr.responseText = b.textContent ? b.textContent : b.innerText;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if (dt === 'xml' && !xhr.responseXML && xhr.responseText) {\r\n\t\t\t\t\t\txhr.responseXML = toXml(xhr.responseText);\t\t\t// eslint-disable-line no-use-before-define\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdata = httpData(xhr, dt, s);\t\t\t\t\t\t// eslint-disable-line no-use-before-define\r\n\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tstatus = 'parsererror';\r\n\t\t\t\t\t\txhr.error = errMsg = (err || status);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tlog('error caught: ', err);\r\n\t\t\t\t\tstatus = 'error';\r\n\t\t\t\t\txhr.error = errMsg = (err || status);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xhr.aborted) {\r\n\t\t\t\t\tlog('upload aborted');\r\n\t\t\t\t\tstatus = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xhr.status) { // we've set xhr.status\r\n\t\t\t\t\tstatus = ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304) ? 'success' : 'error';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// ordering of these callbacks/triggers is odd, but that's how $.ajax does it\r\n\t\t\t\tif (status === 'success') {\r\n\t\t\t\t\tif (s.success) {\r\n\t\t\t\t\t\ts.success.call(s.context, data, 'success', xhr);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdeferred.resolve(xhr.responseText, 'success', xhr);\r\n\r\n\t\t\t\t\tif (g) {\r\n\t\t\t\t\t\t$.event.trigger('ajaxSuccess', [xhr, s]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (status) {\r\n\t\t\t\t\tif (typeof errMsg === 'undefined') {\r\n\t\t\t\t\t\terrMsg = xhr.statusText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (s.error) {\r\n\t\t\t\t\t\ts.error.call(s.context, xhr, status, errMsg);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdeferred.reject(xhr, 'error', errMsg);\r\n\t\t\t\t\tif (g) {\r\n\t\t\t\t\t\t$.event.trigger('ajaxError', [xhr, s, errMsg]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (g) {\r\n\t\t\t\t\t$.event.trigger('ajaxComplete', [xhr, s]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (g && !--$.active) {\r\n\t\t\t\t\t$.event.trigger('ajaxStop');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (s.complete) {\r\n\t\t\t\t\ts.complete.call(s.context, xhr, status);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallbackProcessed = true;\r\n\t\t\t\tif (s.timeout) {\r\n\t\t\t\t\tclearTimeout(timeoutHandle);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// clean up\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tif (!s.iframeTarget) {\r\n\t\t\t\t\t\t$io.remove();\r\n\t\t\t\t\t} else { // adding else to clean up existing iframe response.\r\n\t\t\t\t\t\t$io.attr('src', s.iframeSrc);\r\n\t\t\t\t\t}\r\n\t\t\t\t\txhr.responseXML = null;\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\r\n\t\t\tvar toXml = $.parseXML || function(s, doc) { // use parseXML if available (jQuery 1.5+)\r\n\t\t\t\tif (window.ActiveXObject) {\r\n\t\t\t\t\tdoc = new ActiveXObject('Microsoft.XMLDOM');\r\n\t\t\t\t\tdoc.async = 'false';\r\n\t\t\t\t\tdoc.loadXML(s);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdoc = (new DOMParser()).parseFromString(s, 'text/xml');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (doc && doc.documentElement && doc.documentElement.nodeName !== 'parsererror') ? doc : null;\r\n\t\t\t};\r\n\t\t\tvar parseJSON = $.parseJSON || function(s) {\r\n\t\t\t\t/* jslint evil:true */\r\n\t\t\t\treturn window['eval']('(' + s + ')');\t\t\t// eslint-disable-line dot-notation\r\n\t\t\t};\r\n\r\n\t\t\tvar httpData = function(xhr, type, s) { // mostly lifted from jq1.4.4\r\n\r\n\t\t\t\tvar ct = xhr.getResponseHeader('content-type') || '',\r\n\t\t\t\t\txml = ((type === 'xml' || !type) && ct.indexOf('xml') >= 0),\r\n\t\t\t\t\tdata = xml ? xhr.responseXML : xhr.responseText;\r\n\r\n\t\t\t\tif (xml && data.documentElement.nodeName === 'parsererror') {\r\n\t\t\t\t\tif ($.error) {\r\n\t\t\t\t\t\t$.error('parsererror');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (s && s.dataFilter) {\r\n\t\t\t\t\tdata = s.dataFilter(data, type);\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof data === 'string') {\r\n\t\t\t\t\tif ((type === 'json' || !type) && ct.indexOf('json') >= 0) {\r\n\t\t\t\t\t\tdata = parseJSON(data);\r\n\t\t\t\t\t} else if ((type === 'script' || !type) && ct.indexOf('javascript') >= 0) {\r\n\t\t\t\t\t\t$.globalEval(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t};\r\n\r\n\t\t\treturn deferred;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * ajaxForm() provides a mechanism for fully automating form submission.\r\n\t *\r\n\t * The advantages of using this method instead of ajaxSubmit() are:\r\n\t *\r\n\t * 1: This method will include coordinates for <input type=\"image\"> elements (if the element\r\n\t *\tis used to submit the form).\r\n\t * 2. This method will include the submit element's name/value data (for the element that was\r\n\t *\tused to submit the form).\r\n\t * 3. This method binds the submit() method to the form for you.\r\n\t *\r\n\t * The options argument for ajaxForm works exactly as it does for ajaxSubmit. ajaxForm merely\r\n\t * passes the options argument along after properly binding events for submit elements and\r\n\t * the form itself.\r\n\t */\r\n\t$.fn.ajaxForm = function(options, data, dataType, onSuccess) {\r\n\t\tif (typeof options === 'string' || (options === false && arguments.length > 0)) {\r\n\t\t\toptions = {\r\n\t\t\t\t'url'      : options,\r\n\t\t\t\t'data'     : data,\r\n\t\t\t\t'dataType' : dataType\r\n\t\t\t};\r\n\r\n\t\t\tif (typeof onSuccess === 'function') {\r\n\t\t\t\toptions.success = onSuccess;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\t\toptions.delegation = options.delegation && $.isFunction($.fn.on);\r\n\r\n\t\t// in jQuery 1.3+ we can fix mistakes with the ready state\r\n\t\tif (!options.delegation && this.length === 0) {\r\n\t\t\tvar o = {s: this.selector, c: this.context};\r\n\r\n\t\t\tif (!$.isReady && o.s) {\r\n\t\t\t\tlog('DOM not ready, queuing ajaxForm');\r\n\t\t\t\t$(function() {\r\n\t\t\t\t\t$(o.s, o.c).ajaxForm(options);\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\t// is your DOM ready?  http://docs.jquery.com/Tutorials:Introducing_$(document).ready()\r\n\t\t\tlog('terminating; zero elements found by selector' + ($.isReady ? '' : ' (DOM not ready)'));\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (options.delegation) {\r\n\t\t\t$(document)\r\n\t\t\t\t.off('submit.form-plugin', this.selector, doAjaxSubmit)\r\n\t\t\t\t.off('click.form-plugin', this.selector, captureSubmittingElement)\r\n\t\t\t\t.on('submit.form-plugin', this.selector, options, doAjaxSubmit)\r\n\t\t\t\t.on('click.form-plugin', this.selector, options, captureSubmittingElement);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this.ajaxFormUnbind()\r\n\t\t\t.on('submit.form-plugin', options, doAjaxSubmit)\r\n\t\t\t.on('click.form-plugin', options, captureSubmittingElement);\r\n\t};\r\n\r\n\t// private event handlers\r\n\tfunction doAjaxSubmit(e) {\r\n\t\t/* jshint validthis:true */\r\n\t\tvar options = e.data;\r\n\r\n\t\tif (!e.isDefaultPrevented()) { // if event has been canceled, don't proceed\r\n\t\t\te.preventDefault();\r\n\t\t\t$(e.target).closest('form').ajaxSubmit(options); // #365\r\n\t\t}\r\n\t}\r\n\r\n\tfunction captureSubmittingElement(e) {\r\n\t\t/* jshint validthis:true */\r\n\t\tvar target = e.target;\r\n\t\tvar $el = $(target);\r\n\r\n\t\tif (!$el.is('[type=submit],[type=image]')) {\r\n\t\t\t// is this a child element of the submit el?  (ex: a span within a button)\r\n\t\t\tvar t = $el.closest('[type=submit]');\r\n\r\n\t\t\tif (t.length === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttarget = t[0];\r\n\t\t}\r\n\r\n\t\tvar form = target.form;\r\n\r\n\t\tform.clk = target;\r\n\r\n\t\tif (target.type === 'image') {\r\n\t\t\tif (typeof e.offsetX !== 'undefined') {\r\n\t\t\t\tform.clk_x = e.offsetX;\r\n\t\t\t\tform.clk_y = e.offsetY;\r\n\r\n\t\t\t} else if (typeof $.fn.offset === 'function') {\r\n\t\t\t\tvar offset = $el.offset();\r\n\r\n\t\t\t\tform.clk_x = e.pageX - offset.left;\r\n\t\t\t\tform.clk_y = e.pageY - offset.top;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tform.clk_x = e.pageX - target.offsetLeft;\r\n\t\t\t\tform.clk_y = e.pageY - target.offsetTop;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// clear form vars\r\n\t\tsetTimeout(function() {\r\n\t\t\tform.clk = form.clk_x = form.clk_y = null;\r\n\t\t}, 100);\r\n\t}\r\n\r\n\r\n\t// ajaxFormUnbind unbinds the event handlers that were bound by ajaxForm\r\n\t$.fn.ajaxFormUnbind = function() {\r\n\t\treturn this.off('submit.form-plugin click.form-plugin');\r\n\t};\r\n\r\n\t/**\r\n\t * formToArray() gathers form element data into an array of objects that can\r\n\t * be passed to any of the following ajax functions: $.get, $.post, or load.\r\n\t * Each object in the array has both a 'name' and 'value' property. An example of\r\n\t * an array for a simple login form might be:\r\n\t *\r\n\t * [ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]\r\n\t *\r\n\t * It is this array that is passed to pre-submit callback functions provided to the\r\n\t * ajaxSubmit() and ajaxForm() methods.\r\n\t */\r\n\t$.fn.formToArray = function(semantic, elements, filtering) {\r\n\t\tvar a = [];\r\n\r\n\t\tif (this.length === 0) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\r\n\t\tvar form = this[0];\r\n\t\tvar formId = this.attr('id');\r\n\t\tvar els = (semantic || typeof form.elements === 'undefined') ? form.getElementsByTagName('*') : form.elements;\r\n\t\tvar els2;\r\n\r\n\t\tif (els) {\r\n\t\t\tels = $.makeArray(els); // convert to standard array\r\n\t\t}\r\n\r\n\t\t// #386; account for inputs outside the form which use the 'form' attribute\r\n\t\t// FinesseRus: in non-IE browsers outside fields are already included in form.elements.\r\n\t\tif (formId && (semantic || /(Edge|Trident)\\//.test(navigator.userAgent))) {\r\n\t\t\tels2 = $(':input[form=\"' + formId + '\"]').get(); // hat tip @thet\r\n\t\t\tif (els2.length) {\r\n\t\t\t\tels = (els || []).concat(els2);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!els || !els.length) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\r\n\t\tif ($.isFunction(filtering)) {\r\n\t\t\tels = $.map(els, filtering);\r\n\t\t}\r\n\r\n\t\tvar i, j, n, v, el, max, jmax;\r\n\r\n\t\tfor (i = 0, max = els.length; i < max; i++) {\r\n\t\t\tel = els[i];\r\n\t\t\tn = el.name;\r\n\t\t\tif (!n || el.disabled) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (semantic && form.clk && el.type === 'image') {\r\n\t\t\t\t// handle image inputs on the fly when semantic == true\r\n\t\t\t\tif (form.clk === el) {\r\n\t\t\t\t\ta.push({name: n, value: $(el).val(), type: el.type});\r\n\t\t\t\t\ta.push({name: n + '.x', value: form.clk_x}, {name: n + '.y', value: form.clk_y});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tv = $.fieldValue(el, true);\r\n\t\t\tif (v && v.constructor === Array) {\r\n\t\t\t\tif (elements) {\r\n\t\t\t\t\telements.push(el);\r\n\t\t\t\t}\r\n\t\t\t\tfor (j = 0, jmax = v.length; j < jmax; j++) {\r\n\t\t\t\t\ta.push({name: n, value: v[j]});\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (feature.fileapi && el.type === 'file') {\r\n\t\t\t\tif (elements) {\r\n\t\t\t\t\telements.push(el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar files = el.files;\r\n\r\n\t\t\t\tif (files.length) {\r\n\t\t\t\t\tfor (j = 0; j < files.length; j++) {\r\n\t\t\t\t\t\ta.push({name: n, value: files[j], type: el.type});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// #180\r\n\t\t\t\t\ta.push({name: n, value: '', type: el.type});\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (v !== null && typeof v !== 'undefined') {\r\n\t\t\t\tif (elements) {\r\n\t\t\t\t\telements.push(el);\r\n\t\t\t\t}\r\n\t\t\t\ta.push({name: n, value: v, type: el.type, required: el.required});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!semantic && form.clk) {\r\n\t\t\t// input type=='image' are not found in elements array! handle it here\r\n\t\t\tvar $input = $(form.clk), input = $input[0];\r\n\r\n\t\t\tn = input.name;\r\n\r\n\t\t\tif (n && !input.disabled && input.type === 'image') {\r\n\t\t\t\ta.push({name: n, value: $input.val()});\r\n\t\t\t\ta.push({name: n + '.x', value: form.clk_x}, {name: n + '.y', value: form.clk_y});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\t};\r\n\r\n\t/**\r\n\t * Serializes form data into a 'submittable' string. This method will return a string\r\n\t * in the format: name1=value1&amp;name2=value2\r\n\t */\r\n\t$.fn.formSerialize = function(semantic) {\r\n\t\t// hand off to jQuery.param for proper encoding\r\n\t\treturn $.param(this.formToArray(semantic));\r\n\t};\r\n\r\n\t/**\r\n\t * Serializes all field elements in the jQuery object into a query string.\r\n\t * This method will return a string in the format: name1=value1&amp;name2=value2\r\n\t */\r\n\t$.fn.fieldSerialize = function(successful) {\r\n\t\tvar a = [];\r\n\r\n\t\tthis.each(function() {\r\n\t\t\tvar n = this.name;\r\n\r\n\t\t\tif (!n) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar v = $.fieldValue(this, successful);\r\n\r\n\t\t\tif (v && v.constructor === Array) {\r\n\t\t\t\tfor (var i = 0, max = v.length; i < max; i++) {\r\n\t\t\t\t\ta.push({name: n, value: v[i]});\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (v !== null && typeof v !== 'undefined') {\r\n\t\t\t\ta.push({name: this.name, value: v});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// hand off to jQuery.param for proper encoding\r\n\t\treturn $.param(a);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the value(s) of the element in the matched set. For example, consider the following form:\r\n\t *\r\n\t *\t<form><fieldset>\r\n\t *\t\t<input name=\"A\" type=\"text\">\r\n\t *\t\t<input name=\"A\" type=\"text\">\r\n\t *\t\t<input name=\"B\" type=\"checkbox\" value=\"B1\">\r\n\t *\t\t<input name=\"B\" type=\"checkbox\" value=\"B2\">\r\n\t *\t\t<input name=\"C\" type=\"radio\" value=\"C1\">\r\n\t *\t\t<input name=\"C\" type=\"radio\" value=\"C2\">\r\n\t *\t</fieldset></form>\r\n\t *\r\n\t *\tvar v = $('input[type=text]').fieldValue();\r\n\t *\t// if no values are entered into the text inputs\r\n\t *\tv === ['','']\r\n\t *\t// if values entered into the text inputs are 'foo' and 'bar'\r\n\t *\tv === ['foo','bar']\r\n\t *\r\n\t *\tvar v = $('input[type=checkbox]').fieldValue();\r\n\t *\t// if neither checkbox is checked\r\n\t *\tv === undefined\r\n\t *\t// if both checkboxes are checked\r\n\t *\tv === ['B1', 'B2']\r\n\t *\r\n\t *\tvar v = $('input[type=radio]').fieldValue();\r\n\t *\t// if neither radio is checked\r\n\t *\tv === undefined\r\n\t *\t// if first radio is checked\r\n\t *\tv === ['C1']\r\n\t *\r\n\t * The successful argument controls whether or not the field element must be 'successful'\r\n\t * (per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).\r\n\t * The default value of the successful argument is true. If this value is false the value(s)\r\n\t * for each element is returned.\r\n\t *\r\n\t * Note: This method *always* returns an array. If no valid value can be determined the\r\n\t *\tarray will be empty, otherwise it will contain one or more values.\r\n\t */\r\n\t$.fn.fieldValue = function(successful) {\r\n\t\tfor (var val = [], i = 0, max = this.length; i < max; i++) {\r\n\t\t\tvar el = this[i];\r\n\t\t\tvar v = $.fieldValue(el, successful);\r\n\r\n\t\t\tif (v === null || typeof v === 'undefined' || (v.constructor === Array && !v.length)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (v.constructor === Array) {\r\n\t\t\t\t$.merge(val, v);\r\n\t\t\t} else {\r\n\t\t\t\tval.push(v);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn val;\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the value of the field element.\r\n\t */\r\n\t$.fieldValue = function(el, successful) {\r\n\t\tvar n = el.name, t = el.type, tag = el.tagName.toLowerCase();\r\n\r\n\t\tif (typeof successful === 'undefined') {\r\n\t\t\tsuccessful = true;\r\n\t\t}\r\n\r\n\t\t/* eslint-disable no-mixed-operators */\r\n\t\tif (successful && (!n || el.disabled || t === 'reset' || t === 'button' ||\r\n\t\t\t(t === 'checkbox' || t === 'radio') && !el.checked ||\r\n\t\t\t(t === 'submit' || t === 'image') && el.form && el.form.clk !== el ||\r\n\t\t\ttag === 'select' && el.selectedIndex === -1)) {\r\n\t\t/* eslint-enable no-mixed-operators */\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (tag === 'select') {\r\n\t\t\tvar index = el.selectedIndex;\r\n\r\n\t\t\tif (index < 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar a = [], ops = el.options;\r\n\t\t\tvar one = (t === 'select-one');\r\n\t\t\tvar max = (one ? index + 1 : ops.length);\r\n\r\n\t\t\tfor (var i = (one ? index : 0); i < max; i++) {\r\n\t\t\t\tvar op = ops[i];\r\n\r\n\t\t\t\tif (op.selected && !op.disabled) {\r\n\t\t\t\t\tvar v = op.value;\r\n\r\n\t\t\t\t\tif (!v) { // extra pain for IE...\r\n\t\t\t\t\t\tv = (op.attributes && op.attributes.value && !(op.attributes.value.specified)) ? op.text : op.value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (one) {\r\n\t\t\t\t\t\treturn v;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ta.push(v);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\t\t}\r\n\r\n\t\treturn $(el).val().replace(rCRLF, '\\r\\n');\r\n\t};\r\n\r\n\t/**\r\n\t * Clears the form data. Takes the following actions on the form's input fields:\r\n\t *  - input text fields will have their 'value' property set to the empty string\r\n\t *  - select elements will have their 'selectedIndex' property set to -1\r\n\t *  - checkbox and radio inputs will have their 'checked' property set to false\r\n\t *  - inputs of type submit, button, reset, and hidden will *not* be effected\r\n\t *  - button elements will *not* be effected\r\n\t */\r\n\t$.fn.clearForm = function(includeHidden) {\r\n\t\treturn this.each(function() {\r\n\t\t\t$('input,select,textarea', this).clearFields(includeHidden);\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Clears the selected form elements.\r\n\t */\r\n\t$.fn.clearFields = $.fn.clearInputs = function(includeHidden) {\r\n\t\tvar re = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i; // 'hidden' is not in this list\r\n\r\n\t\treturn this.each(function() {\r\n\t\t\tvar t = this.type, tag = this.tagName.toLowerCase();\r\n\r\n\t\t\tif (re.test(t) || tag === 'textarea') {\r\n\t\t\t\tthis.value = '';\r\n\r\n\t\t\t} else if (t === 'checkbox' || t === 'radio') {\r\n\t\t\t\tthis.checked = false;\r\n\r\n\t\t\t} else if (tag === 'select') {\r\n\t\t\t\tthis.selectedIndex = -1;\r\n\r\n\t\t\t} else if (t === 'file') {\r\n\t\t\t\tif (/MSIE/.test(navigator.userAgent)) {\r\n\t\t\t\t\t$(this).replaceWith($(this).clone(true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(this).val('');\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (includeHidden) {\r\n\t\t\t\t// includeHidden can be the value true, or it can be a selector string\r\n\t\t\t\t// indicating a special test; for example:\r\n\t\t\t\t// $('#myForm').clearForm('.special:hidden')\r\n\t\t\t\t// the above would clean hidden inputs that have the class of 'special'\r\n\t\t\t\tif ((includeHidden === true && /hidden/.test(t)) ||\r\n\t\t\t\t\t(typeof includeHidden === 'string' && $(this).is(includeHidden))) {\r\n\t\t\t\t\tthis.value = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Resets the form data or individual elements. Takes the following actions\r\n\t * on the selected tags:\r\n\t * - all fields within form elements will be reset to their original value\r\n\t * - input / textarea / select fields will be reset to their original value\r\n\t * - option / optgroup fields (for multi-selects) will defaulted individually\r\n\t * - non-multiple options will find the right select to default\r\n\t * - label elements will be searched against its 'for' attribute\r\n\t * - all others will be searched for appropriate children to default\r\n\t */\r\n\t$.fn.resetForm = function() {\r\n\t\treturn this.each(function() {\r\n\t\t\tvar el = $(this);\r\n\t\t\tvar tag = this.tagName.toLowerCase();\r\n\r\n\t\t\tswitch (tag) {\r\n\t\t\tcase 'input':\r\n\t\t\t\tthis.checked = this.defaultChecked;\r\n\t\t\t\t\t// fall through\r\n\r\n\t\t\tcase 'textarea':\r\n\t\t\t\tthis.value = this.defaultValue;\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tcase 'option':\r\n\t\t\tcase 'optgroup':\r\n\t\t\t\tvar select = el.parents('select');\r\n\r\n\t\t\t\tif (select.length && select[0].multiple) {\r\n\t\t\t\t\tif (tag === 'option') {\r\n\t\t\t\t\t\tthis.selected = this.defaultSelected;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tel.find('option').resetForm();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tselect.resetForm();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tcase 'select':\r\n\t\t\t\tel.find('option').each(function(i) {\t\t\t\t// eslint-disable-line consistent-return\r\n\t\t\t\t\tthis.selected = this.defaultSelected;\r\n\t\t\t\t\tif (this.defaultSelected && !el[0].multiple) {\r\n\t\t\t\t\t\tel[0].selectedIndex = i;\r\n\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tcase 'label':\r\n\t\t\t\tvar forEl = $(el.attr('for'));\r\n\t\t\t\tvar list = el.find('input,select,textarea');\r\n\r\n\t\t\t\tif (forEl[0]) {\r\n\t\t\t\t\tlist.unshift(forEl[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlist.resetForm();\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tcase 'form':\r\n\t\t\t\t\t// guard against an input with the name of 'reset'\r\n\t\t\t\t\t// note that IE reports the reset function as an 'object'\r\n\t\t\t\tif (typeof this.reset === 'function' || (typeof this.reset === 'object' && !this.reset.nodeType)) {\r\n\t\t\t\t\tthis.reset();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tel.find('form,input,label,select,textarea').resetForm();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Enables or disables any matching elements.\r\n\t */\r\n\t$.fn.enable = function(b) {\r\n\t\tif (typeof b === 'undefined') {\r\n\t\t\tb = true;\r\n\t\t}\r\n\r\n\t\treturn this.each(function() {\r\n\t\t\tthis.disabled = !b;\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Checks/unchecks any matching checkboxes or radio buttons and\r\n\t * selects/deselects and matching option elements.\r\n\t */\r\n\t$.fn.selected = function(select) {\r\n\t\tif (typeof select === 'undefined') {\r\n\t\t\tselect = true;\r\n\t\t}\r\n\r\n\t\treturn this.each(function() {\r\n\t\t\tvar t = this.type;\r\n\r\n\t\t\tif (t === 'checkbox' || t === 'radio') {\r\n\t\t\t\tthis.checked = select;\r\n\r\n\t\t\t} else if (this.tagName.toLowerCase() === 'option') {\r\n\t\t\t\tvar $sel = $(this).parent('select');\r\n\r\n\t\t\t\tif (select && $sel[0] && $sel[0].type === 'select-one') {\r\n\t\t\t\t\t// deselect all other options\r\n\t\t\t\t\t$sel.find('option').selected(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.selected = select;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// expose debug var\r\n\t$.fn.ajaxSubmit.debug = false;\r\n\r\n\t// helper fn for console logging\r\n\tfunction log() {\r\n\t\tif (!$.fn.ajaxSubmit.debug) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar msg = '[jquery.form] ' + Array.prototype.join.call(arguments, '');\r\n\r\n\t\tif (window.console && window.console.log) {\r\n\t\t\twindow.console.log(msg);\r\n\r\n\t\t} else if (window.opera && window.opera.postError) {\r\n\t\t\twindow.opera.postError(msg);\r\n\t\t}\r\n\t}\r\n\r\n\treturn $;\r\n});\ndefine('skylark-jquery-form/main',[\r\n\t\"./form\"\r\n],function(form){\r\n\treturn form;\r\n});\ndefine('skylark-jquery-form', ['skylark-jquery-form/main'], function (main) { return main; });\n\n"]}